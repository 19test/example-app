/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './nav-item';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/material/list/list';
import * as import11 from '@angular/router/src/directives/router_link';
import * as import12 from '@angular/core/src/linker/query_list';
import * as import13 from '@angular/material/icon/icon';
import * as import14 from '@angular/material/core/line/line';
import * as import15 from '../../node_modules/@angular/material/list/list.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/router/src/router';
import * as import18 from '@angular/router/src/router_state';
import * as import19 from '@angular/common/src/location/location_strategy';
import * as import20 from '../../node_modules/@angular/material/icon/icon.ngfactory';
import * as import21 from '@angular/material/icon/icon-registry';
import * as import22 from '@angular/core/src/security';
var renderType_NavItemComponent_Host:import0.RenderComponentType = (null as any);
class _View_NavItemComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _NavItemComponent_0_4:import3.NavItemComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NavItemComponent_Host0,renderType_NavItemComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('bc-nav-item',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_NavItemComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._NavItemComponent_0_4 = new import3.NavItemComponent();
    this._appEl_0.initComponent(this._NavItemComponent_0_4,([] as any[]),compView_0);
    compView_0.create(this._NavItemComponent_0_4,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.NavItemComponent) && (0 === requestNodeIndex))) { return this._NavItemComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_NavItemComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_NavItemComponent_Host === (null as any))) { (renderType_NavItemComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_NavItemComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const NavItemComponentNgFactory:import9.ComponentFactory<import3.NavItemComponent> = new import9.ComponentFactory<import3.NavItemComponent>('bc-nav-item',viewFactory_NavItemComponent_Host0,import3.NavItemComponent);
const styles_NavItemComponent:any[] = ['.secondary[_ngcontent-%COMP%] {\n      color: rgba(0, 0, 0, 0.54);\n    }'];
var renderType_NavItemComponent:import0.RenderComponentType = (null as any);
class _View_NavItemComponent0 extends import1.AppView<import3.NavItemComponent> {
  _text_0:any;
  _el_1:any;
  /*private*/ _appEl_1:import2.AppElement;
  _MdListItem_1_4:import10.MdListItem;
  _RouterLinkWithHref_1_5:import11.RouterLinkWithHref;
  _query_MdLine_1_0:import12.QueryList<any>;
  _query_MdListAvatar_1_1:import12.QueryList<any>;
  _text_2:any;
  _el_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _MdIcon_3_4:import13.MdIcon;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _MdLine_6_3:import14.MdLine;
  _text_7:any;
  _el_8:any;
  _MdLine_8_3:import14.MdLine;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NavItemComponent0,renderType_NavItemComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'a',(null as any));
    this.renderer.setElementAttribute(this._el_1,'md-list-item','');
    this.renderer.setElementAttribute(this._el_1,'role','listitem');
    this._appEl_1 = new import2.AppElement(1,(null as any),this,this._el_1);
    var compView_1:any = import15.viewFactory_MdListItem0(this.viewUtils,this.injector(1),this._appEl_1);
    this._MdListItem_1_4 = new import10.MdListItem(this.renderer,new import16.ElementRef(this._el_1));
    this._RouterLinkWithHref_1_5 = new import11.RouterLinkWithHref(this.parentInjector.get(import17.Router),this.parentInjector.get(import18.ActivatedRoute),this.parentInjector.get(import19.LocationStrategy));
    this._query_MdLine_1_0 = new import12.QueryList<any>();
    this._query_MdListAvatar_1_1 = new import12.QueryList<any>();
    this._appEl_1.initComponent(this._MdListItem_1_4,([] as any[]),compView_1);
    this._text_2 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._el_3 = this.renderer.createElement((null as any),'md-icon',(null as any));
    this.renderer.setElementAttribute(this._el_3,'md-list-icon','');
    this.renderer.setElementAttribute(this._el_3,'role','img');
    this._appEl_3 = new import2.AppElement(3,1,this,this._el_3);
    var compView_3:any = import20.viewFactory_MdIcon0(this.viewUtils,this.injector(3),this._appEl_3);
    this._MdIcon_3_4 = new import13.MdIcon(new import16.ElementRef(this._el_3),this.renderer,this.parentInjector.get(import21.MdIconRegistry));
    this._appEl_3.initComponent(this._MdIcon_3_4,([] as any[]),compView_3);
    this._text_4 = this.renderer.createText((null as any),'',(null as any));
    compView_3.create(this._MdIcon_3_4,[([] as any[]).concat([this._text_4])],(null as any));
    this._text_5 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._el_6 = this.renderer.createElement((null as any),'span',(null as any));
    this.renderer.setElementAttribute(this._el_6,'md-line','');
    this._MdLine_6_3 = new import14.MdLine();
    this.renderer.projectNodes(this._el_6,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_7 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._el_8 = this.renderer.createElement((null as any),'span',(null as any));
    this.renderer.setElementAttribute(this._el_8,'class','secondary');
    this.renderer.setElementAttribute(this._el_8,'md-line','');
    this._MdLine_8_3 = new import14.MdLine();
    this._text_9 = this.renderer.createText(this._el_8,'',(null as any));
    this._text_10 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._query_MdListAvatar_1_1.reset(([] as any[]));
    this._MdListItem_1_4._hasAvatar = this._query_MdListAvatar_1_1.first;
    compView_1.create(this._MdListItem_1_4,[
      ([] as any[]).concat([this._el_3]),
      ([] as any[]).concat([
        this._el_6,
        this._el_8
      ]
      ),
      ([] as any[]).concat([
        this._text_2,
        this._text_5,
        this._text_7,
        this._text_10
      ]
      )
    ]
    ,(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_1,'focus',this.eventHandler(this._handle_focus_1_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_1,'blur',this.eventHandler(this._handle_blur_1_2.bind(this)));
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._text_11
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.MdIcon) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._MdIcon_3_4; }
    if (((token === import14.MdLine) && (6 === requestNodeIndex))) { return this._MdLine_6_3; }
    if (((token === import14.MdLine) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._MdLine_8_3; }
    if (((token === import10.MdListItem) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdListItem_1_4; }
    if (((token === import11.RouterLinkWithHref) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._RouterLinkWithHref_1_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_4:any = this.context.routerLink;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._RouterLinkWithHref_1_5.routerLink = currVal_4;
      if ((changes === (null as any))) { (changes = {}); }
      changes['routerLink'] = new import7.SimpleChange(this._expr_4,currVal_4);
      this._expr_4 = currVal_4;
    }
    if ((changes !== (null as any))) { this._RouterLinkWithHref_1_5.ngOnChanges(changes); }
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._MdIcon_3_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdLine_1_0.dirty) {
        this._query_MdLine_1_0.reset([
          this._MdLine_6_3,
          this._MdLine_8_3
        ]
        );
        this._MdListItem_1_4._lines = this._query_MdLine_1_0;
        this._query_MdLine_1_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdListItem_1_4.ngAfterContentInit(); }
    }
    const currVal_5:any = this._RouterLinkWithHref_1_5.href;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementProperty(this._el_1,'href',this.viewUtils.sanitizer.sanitize(import22.SecurityContext.URL,currVal_5));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = import4.interpolate(1,'',this.context.icon,'');
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setText(this._text_4,currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = import4.interpolate(1,'',this.context.hint,'');
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setText(this._text_9,currVal_7);
      this._expr_7 = currVal_7;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { this._MdIcon_3_4.ngAfterViewChecked(); }
  }
  destroyInternal():void {
    this._RouterLinkWithHref_1_5.ngOnDestroy();
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.activate.emit()) !== false);
    const pd_1:any = ((<any>this._RouterLinkWithHref_1_5.onClick($event.button,$event.ctrlKey,$event.metaKey)) !== false);
    return ((true && pd_0) && pd_1);
  }
  private _handle_focus_1_1($event:any):boolean {
    this._appEl_1.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MdListItem_1_4._handleFocus()) !== false);
    return (true && pd_0);
  }
  private _handle_blur_1_2($event:any):boolean {
    this._appEl_1.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MdListItem_1_4._handleBlur()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_NavItemComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.NavItemComponent> {
  if ((renderType_NavItemComponent === (null as any))) { (renderType_NavItemComponent = viewUtils.createRenderComponentType('',1,import8.ViewEncapsulation.Emulated,styles_NavItemComponent,{})); }
  return new _View_NavItemComponent0(viewUtils,parentInjector,declarationEl);
}